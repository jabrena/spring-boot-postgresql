/*
 * This file is generated by jOOQ.
 */
package info.jab.ms.jooq.tables.daos;


import info.jab.ms.jooq.tables.FilmCategory;
import info.jab.ms.jooq.tables.pojos.JooqFilmCategory;
import info.jab.ms.jooq.tables.records.FilmCategoryRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class FilmCategoryRepository extends DAOImpl<FilmCategoryRecord, JooqFilmCategory, Record2<Long, Long>> {

    /**
     * Create a new FilmCategoryRepository without any configuration
     */
    public FilmCategoryRepository() {
        super(FilmCategory.FILM_CATEGORY, JooqFilmCategory.class);
    }

    /**
     * Create a new FilmCategoryRepository with an attached configuration
     */
    @Autowired
    public FilmCategoryRepository(Configuration configuration) {
        super(FilmCategory.FILM_CATEGORY, JooqFilmCategory.class, configuration);
    }

    @Override
    public Record2<Long, Long> getId(JooqFilmCategory object) {
        return compositeKeyRecord(object.getFilmId(), object.getCategoryId());
    }

    /**
     * Fetch records that have <code>film_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqFilmCategory> fetchRangeOfFilmId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(FilmCategory.FILM_CATEGORY.FILM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>film_id IN (values)</code>
     */
    public List<JooqFilmCategory> fetchByFilmId(Long... values) {
        return fetch(FilmCategory.FILM_CATEGORY.FILM_ID, values);
    }

    /**
     * Fetch records that have <code>category_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqFilmCategory> fetchRangeOfCategoryId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(FilmCategory.FILM_CATEGORY.CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category_id IN (values)</code>
     */
    public List<JooqFilmCategory> fetchByCategoryId(Long... values) {
        return fetch(FilmCategory.FILM_CATEGORY.CATEGORY_ID, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqFilmCategory> fetchRangeOfLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(FilmCategory.FILM_CATEGORY.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<JooqFilmCategory> fetchByLastUpdate(LocalDateTime... values) {
        return fetch(FilmCategory.FILM_CATEGORY.LAST_UPDATE, values);
    }
}
