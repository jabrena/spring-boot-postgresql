/*
 * This file is generated by jOOQ.
 */
package info.jab.ms.jooq.tables.daos;


import info.jab.ms.jooq.tables.Staff;
import info.jab.ms.jooq.tables.pojos.JooqStaff;
import info.jab.ms.jooq.tables.records.StaffRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class StaffRepository extends DAOImpl<StaffRecord, JooqStaff, Long> {

    /**
     * Create a new StaffRepository without any configuration
     */
    public StaffRepository() {
        super(Staff.STAFF, JooqStaff.class);
    }

    /**
     * Create a new StaffRepository with an attached configuration
     */
    @Autowired
    public StaffRepository(Configuration configuration) {
        super(Staff.STAFF, JooqStaff.class, configuration);
    }

    @Override
    public Long getId(JooqStaff object) {
        return object.getStaffId();
    }

    /**
     * Fetch records that have <code>staff_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqStaff> fetchRangeOfStaffId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Staff.STAFF.STAFF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>staff_id IN (values)</code>
     */
    public List<JooqStaff> fetchByStaffId(Long... values) {
        return fetch(Staff.STAFF.STAFF_ID, values);
    }

    /**
     * Fetch a unique record that has <code>staff_id = value</code>
     */
    public JooqStaff fetchOneByStaffId(Long value) {
        return fetchOne(Staff.STAFF.STAFF_ID, value);
    }

    /**
     * Fetch a unique record that has <code>staff_id = value</code>
     */
    public Optional<JooqStaff> fetchOptionalByStaffId(Long value) {
        return fetchOptional(Staff.STAFF.STAFF_ID, value);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqStaff> fetchRangeOfFirstName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff.STAFF.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<JooqStaff> fetchByFirstName(String... values) {
        return fetch(Staff.STAFF.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqStaff> fetchRangeOfLastName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff.STAFF.LAST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<JooqStaff> fetchByLastName(String... values) {
        return fetch(Staff.STAFF.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqStaff> fetchRangeOfAddressId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Staff.STAFF.ADDRESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<JooqStaff> fetchByAddressId(Long... values) {
        return fetch(Staff.STAFF.ADDRESS_ID, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqStaff> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff.STAFF.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<JooqStaff> fetchByEmail(String... values) {
        return fetch(Staff.STAFF.EMAIL, values);
    }

    /**
     * Fetch records that have <code>store_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqStaff> fetchRangeOfStoreId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Staff.STAFF.STORE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>store_id IN (values)</code>
     */
    public List<JooqStaff> fetchByStoreId(Long... values) {
        return fetch(Staff.STAFF.STORE_ID, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqStaff> fetchRangeOfActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Staff.STAFF.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<JooqStaff> fetchByActive(Boolean... values) {
        return fetch(Staff.STAFF.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqStaff> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff.STAFF.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<JooqStaff> fetchByUsername(String... values) {
        return fetch(Staff.STAFF.USERNAME, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqStaff> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff.STAFF.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<JooqStaff> fetchByPassword(String... values) {
        return fetch(Staff.STAFF.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqStaff> fetchRangeOfLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Staff.STAFF.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<JooqStaff> fetchByLastUpdate(LocalDateTime... values) {
        return fetch(Staff.STAFF.LAST_UPDATE, values);
    }

    /**
     * Fetch records that have <code>picture BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqStaff> fetchRangeOfPicture(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(Staff.STAFF.PICTURE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>picture IN (values)</code>
     */
    public List<JooqStaff> fetchByPicture(byte[]... values) {
        return fetch(Staff.STAFF.PICTURE, values);
    }
}
