/*
 * This file is generated by jOOQ.
 */
package info.jab.ms.jooq.tables.daos;


import info.jab.ms.jooq.tables.Customer;
import info.jab.ms.jooq.tables.pojos.JooqCustomer;
import info.jab.ms.jooq.tables.records.CustomerRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CustomerRepository extends DAOImpl<CustomerRecord, JooqCustomer, Long> {

    /**
     * Create a new CustomerRepository without any configuration
     */
    public CustomerRepository() {
        super(Customer.CUSTOMER, JooqCustomer.class);
    }

    /**
     * Create a new CustomerRepository with an attached configuration
     */
    @Autowired
    public CustomerRepository(Configuration configuration) {
        super(Customer.CUSTOMER, JooqCustomer.class, configuration);
    }

    @Override
    public Long getId(JooqCustomer object) {
        return object.getCustomerId();
    }

    /**
     * Fetch records that have <code>customer_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqCustomer> fetchRangeOfCustomerId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Customer.CUSTOMER.CUSTOMER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>customer_id IN (values)</code>
     */
    public List<JooqCustomer> fetchByCustomerId(Long... values) {
        return fetch(Customer.CUSTOMER.CUSTOMER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>customer_id = value</code>
     */
    public JooqCustomer fetchOneByCustomerId(Long value) {
        return fetchOne(Customer.CUSTOMER.CUSTOMER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>customer_id = value</code>
     */
    public Optional<JooqCustomer> fetchOptionalByCustomerId(Long value) {
        return fetchOptional(Customer.CUSTOMER.CUSTOMER_ID, value);
    }

    /**
     * Fetch records that have <code>store_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqCustomer> fetchRangeOfStoreId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Customer.CUSTOMER.STORE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>store_id IN (values)</code>
     */
    public List<JooqCustomer> fetchByStoreId(Long... values) {
        return fetch(Customer.CUSTOMER.STORE_ID, values);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqCustomer> fetchRangeOfFirstName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customer.CUSTOMER.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<JooqCustomer> fetchByFirstName(String... values) {
        return fetch(Customer.CUSTOMER.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqCustomer> fetchRangeOfLastName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customer.CUSTOMER.LAST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<JooqCustomer> fetchByLastName(String... values) {
        return fetch(Customer.CUSTOMER.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqCustomer> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Customer.CUSTOMER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<JooqCustomer> fetchByEmail(String... values) {
        return fetch(Customer.CUSTOMER.EMAIL, values);
    }

    /**
     * Fetch records that have <code>address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqCustomer> fetchRangeOfAddressId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Customer.CUSTOMER.ADDRESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<JooqCustomer> fetchByAddressId(Long... values) {
        return fetch(Customer.CUSTOMER.ADDRESS_ID, values);
    }

    /**
     * Fetch records that have <code>activebool BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqCustomer> fetchRangeOfActivebool(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Customer.CUSTOMER.ACTIVEBOOL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>activebool IN (values)</code>
     */
    public List<JooqCustomer> fetchByActivebool(Boolean... values) {
        return fetch(Customer.CUSTOMER.ACTIVEBOOL, values);
    }

    /**
     * Fetch records that have <code>create_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqCustomer> fetchRangeOfCreateDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Customer.CUSTOMER.CREATE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<JooqCustomer> fetchByCreateDate(LocalDate... values) {
        return fetch(Customer.CUSTOMER.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqCustomer> fetchRangeOfLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Customer.CUSTOMER.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<JooqCustomer> fetchByLastUpdate(LocalDateTime... values) {
        return fetch(Customer.CUSTOMER.LAST_UPDATE, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqCustomer> fetchRangeOfActive(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Customer.CUSTOMER.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<JooqCustomer> fetchByActive(Integer... values) {
        return fetch(Customer.CUSTOMER.ACTIVE, values);
    }
}
