/*
 * This file is generated by jOOQ.
 */
package info.jab.ms.jooq.tables.daos;


import info.jab.ms.jooq.tables.Payment;
import info.jab.ms.jooq.tables.pojos.JooqPayment;
import info.jab.ms.jooq.tables.records.PaymentRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class PaymentRepository extends DAOImpl<PaymentRecord, JooqPayment, Long> {

    /**
     * Create a new PaymentRepository without any configuration
     */
    public PaymentRepository() {
        super(Payment.PAYMENT, JooqPayment.class);
    }

    /**
     * Create a new PaymentRepository with an attached configuration
     */
    @Autowired
    public PaymentRepository(Configuration configuration) {
        super(Payment.PAYMENT, JooqPayment.class, configuration);
    }

    @Override
    public Long getId(JooqPayment object) {
        return object.getPaymentId();
    }

    /**
     * Fetch records that have <code>payment_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqPayment> fetchRangeOfPaymentId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Payment.PAYMENT.PAYMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_id IN (values)</code>
     */
    public List<JooqPayment> fetchByPaymentId(Long... values) {
        return fetch(Payment.PAYMENT.PAYMENT_ID, values);
    }

    /**
     * Fetch a unique record that has <code>payment_id = value</code>
     */
    public JooqPayment fetchOneByPaymentId(Long value) {
        return fetchOne(Payment.PAYMENT.PAYMENT_ID, value);
    }

    /**
     * Fetch a unique record that has <code>payment_id = value</code>
     */
    public Optional<JooqPayment> fetchOptionalByPaymentId(Long value) {
        return fetchOptional(Payment.PAYMENT.PAYMENT_ID, value);
    }

    /**
     * Fetch records that have <code>customer_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqPayment> fetchRangeOfCustomerId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Payment.PAYMENT.CUSTOMER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>customer_id IN (values)</code>
     */
    public List<JooqPayment> fetchByCustomerId(Long... values) {
        return fetch(Payment.PAYMENT.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>staff_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqPayment> fetchRangeOfStaffId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Payment.PAYMENT.STAFF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>staff_id IN (values)</code>
     */
    public List<JooqPayment> fetchByStaffId(Long... values) {
        return fetch(Payment.PAYMENT.STAFF_ID, values);
    }

    /**
     * Fetch records that have <code>rental_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqPayment> fetchRangeOfRentalId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Payment.PAYMENT.RENTAL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rental_id IN (values)</code>
     */
    public List<JooqPayment> fetchByRentalId(Long... values) {
        return fetch(Payment.PAYMENT.RENTAL_ID, values);
    }

    /**
     * Fetch records that have <code>amount BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqPayment> fetchRangeOfAmount(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Payment.PAYMENT.AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amount IN (values)</code>
     */
    public List<JooqPayment> fetchByAmount(BigDecimal... values) {
        return fetch(Payment.PAYMENT.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>payment_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqPayment> fetchRangeOfPaymentDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Payment.PAYMENT.PAYMENT_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_date IN (values)</code>
     */
    public List<JooqPayment> fetchByPaymentDate(LocalDateTime... values) {
        return fetch(Payment.PAYMENT.PAYMENT_DATE, values);
    }
}
