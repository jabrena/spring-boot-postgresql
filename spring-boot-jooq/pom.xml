<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>info.jab.ms</groupId>
	<artifactId>spring-boot-jooq</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<name>spring-boot-jooq</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>17</java.version>
		<testcontainers.version>1.17.6</testcontainers.version>
		<db.username>postgres</db.username>
		<db.password>postgres</db.password>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.2.8</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.4</version>
        </dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5</artifactId>
            <version>1.0.1</version>
            <scope>test</scope>
        </dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!--
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			-->

			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<version>2.1.1</version>
				<executions>
					<execution>
						<id>testcontainer-start</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
								db = new org.testcontainers.containers.PostgreSQLContainer("postgres:15.1-alpine")
										.withUsername("${db.username}")
										.withDatabaseName("postgres")
										.withPassword("${db.password}")
										.withCopyFileToContainer(
												org.testcontainers.utility.MountableFile.forHostPath("spring-boot-jooq/src/main/resources/sql/step_1.sql"),
												"/docker-entrypoint-initdb.d/step_1.sql");

								db.start();
								project.properties.setProperty('db.url', db.getJdbcUrl());
								project.properties.setProperty('testcontainer.containerid', db.getContainerId());
								project.properties.setProperty('testcontainer.imageName', db.getDockerImageName());
							</source>
						</configuration>
					</execution>
					<execution>
						<id>testcontainer-stop</id>
						<phase>test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
								containerId = "${testcontainer.containerid}"
								imageName = "${testcontainer.imageName}"
								println("Stopping testcontainer $containerId - $imageName")
								org.testcontainers.utility.ResourceReaper
										.instance()
										.stopAndRemoveContainer(containerId, imageName);
							</source>
						</configuration>
					</execution>

				</executions>

				<dependencies>
					<dependency>
						<groupId>org.testcontainers</groupId>
						<artifactId>postgresql</artifactId>
						<version>${testcontainers.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>${jooq.version}</version>
				<executions>
					<execution>
						<id>generate-jooq-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<jdbc>
								<url>${db.url}</url>
								<user>${db.username}</user>
								<password>${db.password}</password>
							</jdbc>
							<generator>
								<generate>
									<pojos>true</pojos>
									<daos>true</daos>
									<springAnnotations>true</springAnnotations>
									<pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
									<javaTimeTypes>true</javaTimeTypes>
									<validationAnnotations>false</validationAnnotations>
								</generate>
								<database>
									<inputSchema>public</inputSchema>
									<includes>.*</includes>
									<excludes>
										flyway_schema_history
									</excludes>
								</database>
								<!-- Rename the generated POJOs and DAOs classes -->
								<strategy>
									<matchers>
										<tables>
											<table>
												<pojoClass>
													<expression>JOOQ_$0</expression>
													<transform>PASCAL</transform>
												</pojoClass>
												<daoClass>
													<expression>$0_Repository</expression>
													<transform>PASCAL</transform>
												</daoClass>
											</table>
										</tables>
									</matchers>
								</strategy>
								<target>
									<clean>true</clean>
									<packageName>info.jab.ms.jooq</packageName>
								</target>
							</generator>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M8</version>
				<configuration>
					<systemPropertyVariables>
						<db.url>${db.url}</db.url>
						<db.username>${db.username}</db.username>
						<db.password>${db.password}</db.password>
					</systemPropertyVariables>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>6.2.1</version>
                <executions>
					<execution>
						<id>actor</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>
								${project.basedir}/../docs/openapi/actor_api_spec.yml
							</inputSpec>
							<generatorName>spring</generatorName>
							<library>spring-boot</library>
							<modelNameSuffix>Dto</modelNameSuffix>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<configOptions>
								<basePackage>com.jab.ms.openapi.actor.gen</basePackage>
								<modelPackage>com.jab.ms.openapi.actor.gen.model</modelPackage>
								<apiPackage>com.jab.ms.openapi.actor.gen.api</apiPackage>
								<configPackage>com.jab.ms.openapi.actor.gen.config</configPackage>
								<dateLibrary>java8</dateLibrary>
								<delegatePattern>true</delegatePattern>
								<interfaceOnly>true</interfaceOnly>

								<useSpringBoot3>true</useSpringBoot3>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>film</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>
								${project.basedir}/../docs/openapi/film_api_spec.yml
							</inputSpec>
							<generatorName>spring</generatorName>
							<library>spring-boot</library>
							<modelNameSuffix>Dto</modelNameSuffix>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<configOptions>
								<basePackage>com.jab.ms.openapi.film.gen</basePackage>
								<modelPackage>com.jab.ms.openapi.film.gen.model</modelPackage>
								<apiPackage>com.jab.ms.openapi.film.gen.api</apiPackage>
								<configPackage>com.jab.ms.openapi.film.gen.config</configPackage>
								<dateLibrary>java8</dateLibrary>
								<delegatePattern>true</delegatePattern>
								<interfaceOnly>true</interfaceOnly>

								<useSpringBoot3>true</useSpringBoot3>
							</configOptions>
						</configuration>
					</execution>
                </executions>
            </plugin>

		</plugins>
	</build>


	<profiles>
		<profile>
			<id>jvm</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<imageName>ghcr.io/jabrena/spring-boot-jooq:buildpacks-jvm.0.1.0-SNAPSHOT</imageName>
							<image>
								<buildpacks>
									<!-- EMPTY -->
								</buildpacks>
							</image>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>native</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<configuration>
							<buildArgs>
								<buildArg>--static</buildArg>
								<buildArg>--libc=musl</buildArg>
							</buildArgs>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<imageName>ghcr.io/jabrena/spring-boot-jooq:buildpacks-native.0.1.0-SNAPSHOT</imageName>
							<image>
								<builder>dashaun/builder:tiny</builder>
								<!--
                                <buildpacks>
                                    <buildpack>gcr.io/paketo-buildpacks/bellsoft-liberica:9.10</buildpack>
                                    <buildpack>gcr.io/paketo-buildpacks/java-native-image</buildpack>
                                </buildpacks>
                                -->
								<env>
									<BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
									<BP_JVM_VERSION>17</BP_JVM_VERSION>
									<BP_NATIVE_IMAGE_BUILD_ARGUMENTS>-J-Xmx6000m</BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
									<!-- - -static -->
									<!-- <BP_BINARY_COMPRESSION_METHOD>upx</BP_BINARY_COMPRESSION_METHOD> -->
									<pullPolicy>IF_NOT_PRESENT</pullPolicy>
								</env>
							</image>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>
